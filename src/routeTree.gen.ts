/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthImport } from './routes/_auth'
import { Route as GuestIndexImport } from './routes/_guest/index'
import { Route as GuestSignupImport } from './routes/_guest/signup'
import { Route as GuestLoginImport } from './routes/_guest/login'
import { Route as GuestAboutImport } from './routes/_guest/about'
import { Route as AuthQuizImport } from './routes/_auth/quiz'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthQuizSubjectImport } from './routes/_auth/quiz/$subject'

// Create/Update Routes

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const GuestIndexRoute = GuestIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRoute,
} as any)

const GuestSignupRoute = GuestSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginRoute = GuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)

const GuestAboutRoute = GuestAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => GuestRoute,
} as any)

const AuthQuizRoute = AuthQuizImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthQuizSubjectRoute = AuthQuizSubjectImport.update({
  id: '/$subject',
  path: '/$subject',
  getParentRoute: () => AuthQuizRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/quiz': {
      id: '/_auth/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof AuthQuizImport
      parentRoute: typeof AuthImport
    }
    '/_guest/about': {
      id: '/_guest/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof GuestAboutImport
      parentRoute: typeof GuestImport
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginImport
      parentRoute: typeof GuestImport
    }
    '/_guest/signup': {
      id: '/_guest/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof GuestSignupImport
      parentRoute: typeof GuestImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexImport
      parentRoute: typeof GuestImport
    }
    '/_auth/quiz/$subject': {
      id: '/_auth/quiz/$subject'
      path: '/$subject'
      fullPath: '/quiz/$subject'
      preLoaderRoute: typeof AuthQuizSubjectImport
      parentRoute: typeof AuthQuizImport
    }
  }
}

// Create and export the route tree

interface AuthQuizRouteChildren {
  AuthQuizSubjectRoute: typeof AuthQuizSubjectRoute
}

const AuthQuizRouteChildren: AuthQuizRouteChildren = {
  AuthQuizSubjectRoute: AuthQuizSubjectRoute,
}

const AuthQuizRouteWithChildren = AuthQuizRoute._addFileChildren(
  AuthQuizRouteChildren,
)

interface AuthRouteChildren {
  AuthHomeRoute: typeof AuthHomeRoute
  AuthQuizRoute: typeof AuthQuizRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthHomeRoute: AuthHomeRoute,
  AuthQuizRoute: AuthQuizRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface GuestRouteChildren {
  GuestAboutRoute: typeof GuestAboutRoute
  GuestLoginRoute: typeof GuestLoginRoute
  GuestSignupRoute: typeof GuestSignupRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestAboutRoute: GuestAboutRoute,
  GuestLoginRoute: GuestLoginRoute,
  GuestSignupRoute: GuestSignupRoute,
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof GuestRouteWithChildren
  '/home': typeof AuthHomeRoute
  '/quiz': typeof AuthQuizRouteWithChildren
  '/about': typeof GuestAboutRoute
  '/login': typeof GuestLoginRoute
  '/signup': typeof GuestSignupRoute
  '/': typeof GuestIndexRoute
  '/quiz/$subject': typeof AuthQuizSubjectRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/home': typeof AuthHomeRoute
  '/quiz': typeof AuthQuizRouteWithChildren
  '/about': typeof GuestAboutRoute
  '/login': typeof GuestLoginRoute
  '/signup': typeof GuestSignupRoute
  '/': typeof GuestIndexRoute
  '/quiz/$subject': typeof AuthQuizSubjectRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_auth/home': typeof AuthHomeRoute
  '/_auth/quiz': typeof AuthQuizRouteWithChildren
  '/_guest/about': typeof GuestAboutRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/signup': typeof GuestSignupRoute
  '/_guest/': typeof GuestIndexRoute
  '/_auth/quiz/$subject': typeof AuthQuizSubjectRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/home'
    | '/quiz'
    | '/about'
    | '/login'
    | '/signup'
    | '/'
    | '/quiz/$subject'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/home'
    | '/quiz'
    | '/about'
    | '/login'
    | '/signup'
    | '/'
    | '/quiz/$subject'
  id:
    | '__root__'
    | '/_auth'
    | '/_guest'
    | '/_auth/home'
    | '/_auth/quiz'
    | '/_guest/about'
    | '/_guest/login'
    | '/_guest/signup'
    | '/_guest/'
    | '/_auth/quiz/$subject'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_guest"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/home",
        "/_auth/quiz"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/about",
        "/_guest/login",
        "/_guest/signup",
        "/_guest/"
      ]
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx",
      "parent": "/_auth"
    },
    "/_auth/quiz": {
      "filePath": "_auth/quiz.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/quiz/$subject"
      ]
    },
    "/_guest/about": {
      "filePath": "_guest/about.tsx",
      "parent": "/_guest"
    },
    "/_guest/login": {
      "filePath": "_guest/login.tsx",
      "parent": "/_guest"
    },
    "/_guest/signup": {
      "filePath": "_guest/signup.tsx",
      "parent": "/_guest"
    },
    "/_guest/": {
      "filePath": "_guest/index.tsx",
      "parent": "/_guest"
    },
    "/_auth/quiz/$subject": {
      "filePath": "_auth/quiz/$subject.tsx",
      "parent": "/_auth/quiz"
    }
  }
}
ROUTE_MANIFEST_END */
